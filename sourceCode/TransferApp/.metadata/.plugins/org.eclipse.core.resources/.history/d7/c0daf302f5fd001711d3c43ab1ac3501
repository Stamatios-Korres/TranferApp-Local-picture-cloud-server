package application;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.nio.charset.StandardCharsets;


public class FileTransferRunnable implements Runnable {
	
	private Socket client;
	private DataOutputStream out;
	private DataInputStream in;
	
	public FileTransferRunnable(String ip, int port) {
		
		try {
	           client = new Socket(ip, port);
	           System.out.println("Connecting to " + ip + " on port " + port);
	           
	           System.out.println("Just connected to " + client.getRemoteSocketAddress());
	           OutputStream outToServer = client.getOutputStream();
	           out = new DataOutputStream(outToServer);
	           InputStream inFromServer = client.getInputStream();
	           in = new DataInputStream(inFromServer);
	           
	        } catch (IOException e) {
	           e.printStackTrace();
	        }
	}
	
	@Override
	public void run() {
		while (!Thread.currentThread().isInterrupted()) {
			this.sendFile("/home/timos/Dropbox/Other/01-Waiting-at-Home-Live-Band-Version.mp3");
			this.sendFile("/home/paris/Desktop/examsched_PPS_sep17.xls");
			this.sendFile("/home/paris/Music/Andy Timmons - That Was Then This Is Now/02 - Pink Champagne Sparkle.mp3");
			this.sendFile("/home/paris/Pictures/CNPS8X_b03.jpg");
			this.sendFile("Exit\0");
			break;
		}
		
		System.out.println("Files' trasfer is completed");
	}
	
	void sendFile(String filePath) {	
		try {
			
			if (filePath.equals("Exit\0")) {
				out.write(filePath.getBytes());
				return;
			}
			
			String[] split = filePath.split("/");
			byte[] bytes = new byte[1024];
			//last entry of split is actual filename
			String filename = split[split.length-1];
			//for C++ Strings
			filename += "\0";
	        out.write(filename.getBytes());
	        System.out.println("Sent : " + filename);
	        
	        bytes = new byte[1024];
	        in.read(bytes);
			String serverAnswer = new String(bytes, StandardCharsets.UTF_8);
			serverAnswer = serverAnswer.trim();
			System.out.println("Server : " + serverAnswer);
			if (serverAnswer.equals("File Already Exists")) {
				System.out.println("Abort transfer...");
				return;
			}

	        File file = new File(filePath);
	        // Get the size of the file
	        long length = file.length();
	        FileInputStream fileIn = new FileInputStream(file);
	        String slength =  String.valueOf(length);
	        slength = slength + "\0";
	        out.write(slength.getBytes());
	        System.out.println("Sent : "+slength);
	        
	        bytes = new byte[1024];
			in.read(bytes);
			serverAnswer = new String(bytes, StandardCharsets.UTF_8);
			serverAnswer = serverAnswer.trim();
			System.out.println("Server : " + serverAnswer);

	        int count;
	        int total = 0;
	        while ((count = fileIn.read(bytes)) > 0) {
	        	total += count;
	            out.write(bytes,0,count);
	        }

	        bytes = new byte[1024];
	        in.read(bytes);
			serverAnswer = new String(bytes, StandardCharsets.UTF_8);
			serverAnswer = serverAnswer.trim();
			System.out.println("Server : " + serverAnswer);
			
	        //System.out.println("File transferation completed , bytes sent : "+total);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
